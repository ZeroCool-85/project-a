{
  "name": "grunt-fast-watch",
  "version": "0.4.2",
  "description": "start/stop/restart service( = background process), support pidfile & kill ",
  "keywords": [
    "gruntplugin",
    "shell",
    "command",
    "cmd",
    "spawn",
    "process",
    "background",
    "service",
    "kill",
    "pidfile"
  ],
  "license": "MIT",
  "author": {
    "name": "js.seth.h",
    "email": "js.seth.h@gmail.com"
  },
  "files": [
    "tasks"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/js-seth-h/grunt-service"
  },
  "scripts": {
    "test": "grunt"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "dependencies": {
    "grunt": "^0.4.4",
    "ignore": "^2.2.12"
  },
  "bugs": {
    "url": "https://github.com/js-seth-h/grunt-service/issues"
  },
  "homepage": "https://github.com/js-seth-h/grunt-service",
  "devDependencies": {},
  "readme": "# grunt-fast-watch\r\n\r\n> similar to [grunt-contrib-watch](https://github.com/gruntjs/grunt-contrib-watch), but faster. \r\n\r\n## Why Another Watch?\r\n\r\n[grunt-contrib-watch](https://github.com/gruntjs/grunt-contrib-watch) somtime didn't capture fs event (in windows). And, it too slow for my purpose.\r\n\r\nI using `fast-watch` to restart server for reloading source code in development.\r\n\r\nI am impatience, so made this.\r\n\r\n\r\n\r\n## Features\r\n\r\n* fast, fast, fast!\r\n* surely capture fs event in windows.\r\n* watch `dir`, not `file`\r\n* support ignore setting(git ignore style, visit [ignore][ig]) \r\n* call different task by file path matching   \r\n* didn't unwatch when call `tasks`\r\n* after running `tasks`, restart `fastWatch` task ( without redundant watch ) \r\n\r\n[ig]: https://www.npmjs.org/package/ignore\r\n## Getting Started\r\n\r\nIf you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide, as it explains how to create a [gruntfile][Getting Started] as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\r\n\r\n```bash\r\n$ npm install --save-dev grunt-fast-watch\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-fast-watch');\r\n```\r\n\r\n*Tip: the [load-grunt-tasks](https://github.com/sindresorhus/load-grunt-tasks) module makes it easier to load multiple grunt tasks.*\r\n\r\n[grunt]: http://gruntjs.com\r\n[Getting Started]: https://github.com/gruntjs/grunt/wiki/Getting-started\r\n\r\n\r\n## Examples\r\n \r\n\r\n```coffee\r\n \r\ntrim = (str)->\r\n  str.replace /(^\\s*)|(\\s*$)/gm, \"\"\r\nfromLines = (patterns)->\r\n  return trim(patterns).split('\\n').map (pattern)->\r\n    trim(pattern)\r\n\r\n\r\nignoreDir = fromLines \"\"\" \r\n.git\r\n.gitignore\r\ntmp        \r\nnode_modules\r\n\r\n\"\"\"\r\nserverCares = fromLines \"\"\"\r\n*.coffee       \r\n*.json\r\n\"\"\" \r\n\r\nclientCares = fromLines \"\"\" \r\n*.coffee   \r\n!Gruntfile.coffee\r\npackage.json \r\n\"\"\"  # every coffee file, but Gruntfile.coffe + package.json\r\n \r\nmodule.exports = (grunt)->   \r\n \r\n  grunt.initConfig \r\n    fastWatch:\r\n      cwd:     \r\n        dir : '.' \r\n        ignoreSubDir : ignoreDir \r\n        trigger:\r\n          server:  \r\n            care : serverCares\r\n            tasks: [\"print:Server\"]\r\n          client: \r\n            care : clientCares  \r\n            tasks: ['print:Client']\r\n\r\n  grunt.loadTasks 'tasks' \r\n\r\n  grunt.registerTask 'print', (arg)-> console.log 'PRINT ',arg\r\n  grunt.registerTask 'default', 'fastWatch:cwd'\r\n\r\n   \r\n```\r\n\r\nWatch all event under `dir` ( `.` = current workign directory ) exclude sub-direcoty matched by `.ignoreSubDir`\r\n\r\nWhen file system event wached, it test `trigger.*.care`\r\n\r\nIf passed, run tasks.\r\n\r\n\r\n## Configuration\r\n\r\n\r\n`dir` & `ignoreSubDir` designate dirs which are watched.\r\n\r\n`trigger` contains `tasks` list which are called by `care`\r\n\r\nSee [ignore][ig] for `ignoreSubDir` and `care`\r\n\r\n**one more thing, matching of `care` is reverse result of [ignore][ig]**\r\n\r\nPut simply, [ignore][ig] module filter out changed file path, then watcher cares. And vice versa.\r\n\r\nIt may be seem weird, but [ignore]][ig] is just filepath filter.\r\n\r\nAnyway, write pattern naturally then fast-watch understands.\r\n \r\n\r\n\r\n## License\r\n\r\n(The MIT License)\r\n\r\nCopyright (c) 2014 junsik &lt;js@seth.h@google.com&gt;\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n'Software'), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n\r\n[sh]: https://github.com/sindresorhus/grunt-shell \r\n[sp]: https://github.com/cri5ti/grunt-shell-spawn",
  "readmeFilename": "readme.md",
  "_id": "grunt-fast-watch@0.4.2",
  "_from": "grunt-fast-watch@"
}
